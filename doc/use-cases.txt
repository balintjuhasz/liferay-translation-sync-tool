UC1. Adding a new project
-------------------------
 * Pre-conditions:
 	. Project must exist in SVN under a given plugin directory
 	. /var/www/Pootle/po does not contain a directory with the project code
 * Steps
 	1. Log in as pootle administrator
 	2. Go to Admin tab, then click on Project sub-tab, fill out the form:
		. "code" must be the project code given in pootle-manager.conf, which in turn equals to the SVN project directory
		. "full name" is the user friendly project name
		. "quality checks" is standard
		. "file type" must be 'Java Properties'
		. "project tree style" is the 'GNU style: file named by langiage code'
		. "Source Language" is "English"
 	3. >$ pootle-manager.sh -p     [Note: soon we'll be able to pass "-P project-code" to this script]
 * Post-condtions:
 	. project exists in pootle
 	. already translated keys are valid translations
 	. auto translations are uploaded as suggestions
 	. auto-copies are skipped (remain as untranslated keys)

UC2. Updating a project
-----------------------
 * Pre-conditions:
 	. Only additions/removals of language keys
 	. Project must exist in SVN under a given plugin directory
 * Steps:
 	1. >$ pootle-manager.sh -p     [Note: soon we'll be able to pass "-P project-code" to this script]
 * Post-conditions:
 	. New keys present in properties file are added to te pootle project just like UC1 post-conditions
	. Removed keys in properties are removed from pootle project (it is only required that key disappears from Language.properties)
    . Existing keys in the properties files (already translated in pootle) are... (ignored | overwritten | suggested)
    	[default: pootle overwrites them unless update_stores invoked with --keep]
    . Existing keys in the properties files (untranslated in pootle) are... (overwritten | suggested).
    	[default: pootle overwrites them]

UC3. Updating trunk
-------------------
 * Pre-conditions:
 	. Project was created or updated some time ago
 	. Temp SVN backup dirs managed by the script are in place
 * Steps:
 	1. >$ pootle-manager.sh -r     [Note: soon we'll be able to pass "-P project-code" to this script]
 * Post-conditions:
 	. A directory is created with the updated properties files such that:
 	 	. Valid pootle  translations are associated with keys
 	 	. Any untranslated key in pootle is set with the original value in (last checkout of) SVN
 	 	. Comments are respected
 	 	. Original file encodings are respected
 	. [TODO] A patch file is created
 	. The commit itself must be done manually (including any conflict resolution due to not being updated or external commits)